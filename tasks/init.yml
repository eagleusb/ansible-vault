---

- name: "vault | get the first node in {{ vault_group_name }}"
  set_fact:
    vault_first_server: "{{ groups[vault_group_name] | sort() | first() }}"
  run_once: true

- block:
    - name: "vault | set vault address for the first node"
      set_fact:
        vault_first_server_addr:
          "{{ vault_protocol }}://\
          {{ vault_address | mandatory() }}:\
          {{ vault_port }}"

    - name: "vault | check the init status"
      shell: >-
        {{ vault_bin_path }}/vault operator init -status
        -address={{ vault_first_server_addr }}
        {%- if vault_tls_enable | bool() %}
        -ca-cert={{ vault_tls_path.dst_path }}/{{ vault_tls_files.ca_file }}
        {%- if vault_tls_sni.skip_verify %}
        -tls-skip-verify
        {%- endif %}
        {%- if vault_tls_sni.server_name %}
        -tls-server-name={{ vault_tls_sni.server_name }}
        {%- endif %}
        {%- endif %}
      args:
        executable: "/bin/bash"
      register: "is_vault_initialized"
      failed_when: "is_vault_initialized.rc == 1"
      tags: "skip_ansible_lint"

    - name: "vault | initialize vault"
      shell: >-
        {{ vault_bin_path }}/vault operator init
        -key-shares={{ vault_init_key_shares | default(5) | int() }}
        -key-threshold={{ vault_init_key_threshold | default(3) | int() }}
        -format=json
        -address={{ vault_first_server_addr }}
        {%- if vault_tls_enable | bool() %}
        -ca-cert={{ vault_tls_path.dst_path }}/{{ vault_tls_files.ca_file }}
        {%- if vault_tls_sni.skip_verify %}
        -tls-skip-verify
        {%- endif %}
        {%- if vault_tls_sni.server_name %}
        -tls-server-name={{ vault_tls_sni.server_name }}
        {%- endif %}
        {%- endif %}
      args:
        executable: "/bin/bash"
      register: "vault_init"
      when: "is_vault_initialized.rc == 2"
      tags: "skip_ansible_lint"

    - name: "vault | initialization outputs in-memory"
      set_fact:
        vault_init_outputs: "{{ vault_init.stdout }}"
      when: "is_vault_initialized.rc == 2"
      no_log: true
  run_once: true
  become: true
  become_user: "{{ vault_user }}"
  delegate_to: "{{ vault_first_server | mandatory() }}"
  when: "not ansible_check_mode"

- block:
    - name: "vault | create temporary secret directory (local)"
      tempfile:
        state: directory
        prefix: "vault-init-outputs-"
      register: vault_init_backup

    - name: "vault | backup temporarly unseal keys and root token"
      copy:
        dest: "{{ vault_init_backup.path }}/output.json"
        content: "{{ vault_init_outputs }}"
        mode: "0400"
      no_log: true

    - name: "vault | unseal keys and root token"
      debug:
        msg: "Backup and delete your unseal keys and root token from {{ vault_init_backup.path }}"
  when: "vault_init_outputs is defined and vault_init_outputs"
  run_once: true
  become: no
  delegate_to: localhost
