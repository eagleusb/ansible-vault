---

- name: "vault | os packages"
  become: true
  package:
    name: "{{ vault_os_packages }}"
    state: "present"

- name: "vault | os packages diff (debian 9+)"
  package:
    name: "libcap2-bin"
    state: present
  when:
    - ansible_distribution == 'Debian'
    - (ansible_distribution_version == 'buster/sid') or (ansible_distribution_version is version(8.5, '>'))

# TODO: use block
- name: "vault | check vault package checksum file (local)"
  stat:
    path: "{{ role_path }}/files/{{ vault_shasums }}"
  become: false
  run_once: true
  register: "vault_checksum"
  delegate_to: "localhost"

- name: "vault | get vault package checksum file (local)"
  get_url:
    url: "{{ vault_checksum_file_url }}"
    dest: "{{ role_path }}/files/{{ vault_shasums }}"
  become: false
  run_once: true
  when: "not vault_checksum.stat.exists | bool"
  delegate_to: "localhost"

- name: "vault | get vault package checksum (local)"
  shell: |
    set -o pipefail
    grep "{{ vault_pkg }}" "{{ role_path }}/files/{{ vault_shasums }}" | \
    awk '{print $1}'
  args:
    executable: "/bin/bash"
  become: false
  run_once: true
  register: "vault_sha256"
  tags: "skip_ansible_lint"
  delegate_to: "localhost"

- name: "vault | check vault package file (local)"
  stat:
    path: "{{ role_path }}/files/{{ vault_pkg }}"
  become: false
  run_once: true
  register: "vault_package"
  delegate_to: "localhost"

# TODO: use unarchive
- name: "vault | download vault (local) â†’ {{ vault_zip_url }}"
  get_url:
    url: "{{ vault_zip_url }}"
    dest: "{{ role_path }}/files/{{ vault_pkg }}"
    checksum: "sha256:{{ vault_sha256.stdout }}"
    timeout: 42
  become: false
  run_once: true
  when: "not vault_package.stat.exists | bool"
  delegate_to: "localhost"

- name: "vault | unarchive vault (local)"
  unarchive:
    src: "{{ role_path }}/files/{{ vault_pkg }}"
    dest: "{{ role_path }}/files/"
    creates: "{{ role_path }}/files/vault"
    mode: 0755
  become: false
  run_once: true
  delegate_to: "localhost"

- name: "vault | install vault"
  become: true
  copy:
    src: "{{ role_path }}/files/vault"
    dest: "{{ vault_bin_path }}"
    owner: "{{ vault_user }}"
    group: "{{ vault_group }}"
    mode: 0755
  notify: "restart vault"

- name: "vault | cleanup (local)"
  file:
    path: "{{ item }}"
    state: "absent"
  become: false
  with_fileglob: "{{ role_path }}/files/vault"
  run_once: true
  delegate_to: "localhost"
