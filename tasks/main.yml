---

- name: "vault | include asserts"
  import_tasks: "asserts.yml"

- name: "vault | include os-specific variables"
  include_vars: "{{ lookup('first_found', params) }}"
  vars:
    params:
      files:
        - "{{ ansible_os_family }}{{ ansible_distribution_major_version }}.yml"
        - "{{ ansible_os_family }}.yml"
      paths:
        - vars

- name: "vault | import preliminary tasks"
  import_tasks: "prepare.yml"

- name: "vault | import vault checks tasks"
  import_tasks: "check.yml"

# TODO: refactor with input vars
- block:
    - name: "vault | vault enterprise installation (local)"
      include_tasks: "install_enterprise.yml"
      when:
        - vault_enterprise | bool()
        - not vault_install_remotely | bool()
        - not vault_install_remote_repo | bool()

    - name: "vault | vault installation (local)"
      include_tasks: "install.yml"
      when:
        - not vault_enterprise | bool()
        - not vault_install_remotely | bool()
        - not vault_install_repository | bool()

    - name: "vault | vault installation (repository)"
      include_tasks: "install_repository.yml"
      when:
        - not vault_enterprise | bool()
        - not vault_install_remotely | bool()
        - vault_install_repository | bool()

    - name: "vault | vault installation (remotely)"
      include_tasks: "install_remote.yml"
      when:
        - not vault_enterprise | bool()
        - vault_install_remotely | bool()
        - not vault_install_repository | bool()
  when: "installation_required | bool()"

- name: "vault | include tls configuration"
  include_tasks: "tls.yml"
  when: "vault_tls_enable | bool()"

- name: "vault | main configuration template"
  become: true
  template:
    src: "{{ vault_main_configuration_template }}"
    dest: "{{ vault_main_config }}"
    owner: "{{ vault_user }}"
    group: "{{ vault_group }}"
    mode: "0600"
  notify: "reload vault"

- name: "vault | import unsealing tasks"
  import_tasks: "unseal.yml"

- name: "vault | import service init tasks"
  import_tasks: "service.yml"

- name: "vault | include initialization tasks"
  include_tasks: "init.yml"
  when: "vault_init | bool()"

- name: "vault | include bash configuration tasks"
  include_tasks: "bash.yml"
  when: "ansible_os_family != 'Windows'"

# TODO: better check
# outputs advanced info
# "json": {
#         "initialized": true,
#         "performance_standby": false,
#         "replication_dr_mode": "unknown",
#         "replication_performance_mode": "unknown",
#         "sealed": true,
#         "server_time_utc": 1603723355,
#         "standby": true,
#         "version": "1.5.5"
#     }
- name: "vault | check vault api status"
  vars:
    vault_addr: "{{ (vault_address == '0.0.0.0') | ternary('127.0.0.1', vault_address) }}"
  uri:
    validate_certs: "{{ vault_tls_validate_certs_api_check | bool() }}"
    url:
      "{{ vault_protocol }}://\
      {{ vault_hostname | default(vault_addr, true) }}:\
      {{ vault_port }}/v1/sys/health"
    method: "GET"
    status_code: "200, 429, 472, 473, 501, 503"
    body_format: "json"
  register: "check_result"
  retries: 6
  until: "check_result is succeeded"
  delay: 10
  changed_when: false

- name: "vault | current vault api status"
  debug:
    msg: "Vault is {{ vault_http_status[check_result.status | string()] }}"
