---

# TODO: refactor, manage cache
- name: "vault | enterprise os packages"
  package:
    name: "{{ vault_os_packages }}"
    state: present

# TODO: use block
- name: "vault enterprise | check {{ role_path }}/files/{{ vault_enterprise_shasums }} (local)"
  stat:
    path: "{{ role_path }}/files/{{ vault_enterprise_shasums }}"
  become: false
  run_once: true
  register: "vault_checksum"
  delegate_to: "localhost"

- name: "vault enterprise | get sha256sum from {{ role_path }}/files/{{ vault_enterprise_shasums }} (local)"
  shell: |
    set -o pipefail
    grep "{{ vault_enterprise_pkg }}" "{{ role_path }}/files/{{ vault_enterprise_shasums }}" | awk '{print $1}'
  args:
    executable: "/bin/bash"
  become: false
  run_once: true
  register: "vault_sha256"
  tags: "skip_ansible_lint"
  delegate_to: "localhost"

- name: "vault enterprise | check {{ role_path }}/files/{{ vault_enterprise_pkg }} (local)"
  stat:
    path: "{{ role_path }}/files/{{ vault_enterprise_pkg }}"
  become: false
  run_once: true
  register: "vault_package"
  delegate_to: "localhost"

# TODO: use unarchive
- name: "vault enterprise | download vault version {{ vault_version }} (local)"
  get_url:
    url: "{{ vault_zip_url }}/{{ vault_enterprise_pkg }}"
    dest: "{{ role_path }}/files/{{ vault_enterprise_pkg }}"
    checksum: sha256:{{ vault_sha256.stdout }}
    timeout: 42
    mode: 0600
  become: false
  run_once: true
  when: "not vault_package.stat.exists | bool()"
  delegate_to: "localhost"

- name: "vault enterprise | unzip {{ role_path }}/files/{{ vault_enterprise_pkg }} (local)"
  unarchive:
    src: "{{ role_path }}/files/{{ vault_enterprise_pkg }}"
    dest: "{{ role_path }}/files/"
    creates: "{{ role_path }}/files/vault"
    mode: 0755
  become: false
  run_once: true
  delegate_to: "localhost"

- name: "vault enterprise | install version {{ vault_version }}"
  copy:
    src: "{{ role_path }}/files/vault"
    dest: "{{ vault_bin_path }}"
    owner: "{{ vault_user }}"
    group: "{{ vault_group }}"
    mode: 0755
  notify: "restart vault"

- name: "vault enterprise | remove {{ role_path }}/files/vault"
  file:
    path: "{{ item }}"
    state: "absent"
  become: false
  with_fileglob: "{{ role_path }}/files/vault"
  run_once: true
